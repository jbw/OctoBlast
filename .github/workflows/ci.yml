name: CI

on:
  push:
    branches: ["main", "beta"]
  pull_request:
    types:
      - opened
      - synchronize

jobs:
  get-next-version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - run: |
          npm install semantic-release @semantic-release/changelog semantic-release-export-data
          npx semantic-release --dry-run
        id: get-next-version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    outputs:
      new-release-published: ${{ steps.get-next-version.outputs.new-release-published }}
      new-release-version: ${{ steps.get-next-version.outputs.new-release-version }}

  build:
    needs: [get-next-version, lint]
    name: üõ†Ô∏è Build
    runs-on: macos-latest
    if: needs.get-next-version.outputs.new-release-published == 'true'

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: .build
          key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-spm-

      - name: Build
        env:
          AUTH_TOKEN: ${{ secrets.AUTH_TOKEN }}
          AUTH_SECRET: ${{ secrets.AUTH_SECRET }}
        run: |
          export OCTOBLAST_VERSION=${{ needs.get-next-version.outputs.new-release-version }}
          ./releases/build.sh

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.0
        with:
          name: OctoBlast-${{ needs.get-next-version.outputs.new-release-version }}.zip
          path: releases/archives/OctoBlast-${{ needs.get-next-version.outputs.new-release-version }}.zip

  lint:
    name: üß∂ Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: SwiftLint
        uses: norio-nomura/action-swiftlint@3.2.1
        env:
          DIFF_BASE: ${{ github.base_ref }}
          WORKING_DIRECTORY: OctoBlast
        with:
          args: --strict

  release:
    name: üöÄ Release
    if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main' && needs.get-next-version.outputs.new-release-published == 'true'

    needs: [build, lint, get-next-version]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "lts/*"

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: OctoBlast-${{ needs.get-next-version.outputs.new-release-version }}.zip

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.SEMANTIC_RELEASE_TOKEN }}

        run: |
          npm install semantic-release @semantic-release/changelog semantic-release-export-data
          npx semantic-release

      - name: Upload build to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          source: OctoBlast-${{ needs.get-next-version.outputs.new-release-version }}.zip
          target: ${{ secrets.SSH_TARGET }}
