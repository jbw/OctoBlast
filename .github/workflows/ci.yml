name: CI

on:
  push:
    branches: ["main", "beta"]
  pull_request:
    branches: ["main", "beta"]

jobs:
  get-next-version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - run: |
          npm install semantic-release @semantic-release/changelog semantic-release-export-data
          npx semantic-release --dry-run
        id: get-next-version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    outputs:
      new-release-published: ${{ steps.get-next-version.outputs.new-release-published }}
      new-release-version: ${{ steps.get-next-version.outputs.new-release-version }}

  build:
    needs: get-next-version
    name: 🛠️ Build
    runs-on: macos-12
    if: needs.get-next-version.outputs.new-release-published == 'true'

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: .build
          key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-spm-

      - name: Build
        env:
          AUTH_TOKEN: ${{ secrets.AUTH_TOKEN }}
          AUTH_SECRET: ${{ secrets.AUTH_SECRET }}
        run: |
          echo -n ${{ needs.get-next-version.outputs.new-release-version }} > OctoBlast/version.txt
          xcodebuild clean archive -scheme OctoBlast -configuration Release -archivePath build/OctoBlast.xcarchive
          xcodebuild -exportArchive -archivePath build/OctoBlast.xcarchive -exportPath build/OctoBlast -exportOptionsPlist OctoBlast/Info.plist
          zip -r OctoBlast.zip build/OctoBlast

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.0
        with:
          name: OctoBlast.zip
          path: OctoBlast.zip

  lint:
    name: 🧶 Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: SwiftLint
        uses: norio-nomura/action-swiftlint@3.2.1
        env:
          DIFF_BASE: ${{ github.base_ref }}
          WORKING_DIRECTORY: OctoBlast
        with:
          args: --strict

  release:
    name: 🚀 Release
    needs: [build, lint]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "lts/*"

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: OctoBlast.zip

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.SEMANTIC_RELEASE_TOKEN }}

        run: |
          npm install semantic-release @semantic-release/changelog semantic-release-export-data
          npx semantic-release
